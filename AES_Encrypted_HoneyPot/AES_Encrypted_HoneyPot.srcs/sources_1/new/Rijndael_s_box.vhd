
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity Rijndael_s_box is
    Port ( input : in STD_LOGIC_VECTOR (7 downto 0);
           output : out STD_LOGIC_VECTOR (7 downto 0));
end Rijndael_s_box;

architecture Behavioral of Rijndael_s_box is

begin

process(input)
begin
    case input is
        when x"00" => output <= x"63"; when x"01" => output <= x"7C";
        when x"02" => output <= x"77"; when x"03" => output <= x"7B";
        when x"04" => output <= x"F2"; when x"05" => output <= x"6B";
        when x"06" => output <= x"6F"; when x"07" => output <= x"C5";
        when x"08" => output <= x"30"; when x"09" => output <= x"01";
        when x"0A" => output <= x"67"; when x"0B" => output <= x"2B";
        when x"0C" => output <= x"FE"; when x"0D" => output <= x"D7";
        when x"0E" => output <= x"AB"; when x"0F" => output <= x"76";
        when x"10" => output <= x"CA"; when x"11" => output <= x"82";
        when x"12" => output <= x"C9"; when x"13" => output <= x"7D";
        when x"14" => output <= x"FA"; when x"15" => output <= x"59";
        when x"16" => output <= x"47"; when x"17" => output <= x"F0";
        when x"18" => output <= x"AD"; when x"19" => output <= x"D4";
        when x"1A" => output <= x"A2"; when x"1B" => output <= x"AF";
        when x"1C" => output <= x"9C"; when x"1D" => output <= x"A4";
        when x"1E" => output <= x"72"; when x"1F" => output <= x"C0";
        when x"20" => output <= x"B7"; when x"21" => output <= x"FD";
        when x"22" => output <= x"93"; when x"23" => output <= x"26";
        when x"24" => output <= x"36"; when x"25" => output <= x"3F";
        when x"26" => output <= x"F7"; when x"27" => output <= x"CC";
        when x"28" => output <= x"34"; when x"29" => output <= x"A5";
        when x"2A" => output <= x"E5"; when x"2B" => output <= x"F1";
        when x"2C" => output <= x"71"; when x"2D" => output <= x"D8";
        when x"2E" => output <= x"31"; when x"2F" => output <= x"15";
        when x"30" => output <= x"04"; when x"31" => output <= x"C7";
        when x"32" => output <= x"23"; when x"33" => output <= x"C3";
        when x"34" => output <= x"18"; when x"35" => output <= x"96";
        when x"36" => output <= x"05"; when x"37" => output <= x"9A";
        when x"38" => output <= x"07"; when x"39" => output <= x"12";
        when x"3A" => output <= x"80"; when x"3B" => output <= x"E2";
        when x"3C" => output <= x"EB"; when x"3D" => output <= x"27";
        when x"3E" => output <= x"B2"; when x"3F" => output <= x"75";
        when x"40" => output <= x"09"; when x"41" => output <= x"83";
        when x"42" => output <= x"2C"; when x"43" => output <= x"1A";
        when x"44" => output <= x"1B"; when x"45" => output <= x"6E";
        when x"46" => output <= x"5A"; when x"47" => output <= x"A0";
        when x"48" => output <= x"52"; when x"49" => output <= x"3B";
        when x"4A" => output <= x"D6"; when x"4B" => output <= x"B3";
        when x"4C" => output <= x"29"; when x"4D" => output <= x"E3";
        when x"4E" => output <= x"2F"; when x"4F" => output <= x"84";
        when x"50" => output <= x"53"; when x"51" => output <= x"D1";
        when x"52" => output <= x"00"; when x"53" => output <= x"ED";
        when x"54" => output <= x"20"; when x"55" => output <= x"FC";
        when x"56" => output <= x"B1"; when x"57" => output <= x"5B";
        when x"58" => output <= x"6A"; when x"59" => output <= x"CB";
        when x"5A" => output <= x"BE"; when x"5B" => output <= x"39";
        when x"5C" => output <= x"4A"; when x"5D" => output <= x"4C";
        when x"5E" => output <= x"58"; when x"5F" => output <= x"CF";
        when x"60" => output <= x"D0"; when x"61" => output <= x"EF";
        when x"62" => output <= x"AA"; when x"63" => output <= x"FB";
        when x"64" => output <= x"43"; when x"65" => output <= x"4D";
        when x"66" => output <= x"33"; when x"67" => output <= x"85";
        when x"68" => output <= x"45"; when x"69" => output <= x"F9";
        when x"6A" => output <= x"02"; when x"6B" => output <= x"7F";
        when x"6C" => output <= x"50"; when x"6D" => output <= x"3C";
        when x"6E" => output <= x"9F"; when x"6F" => output <= x"A8";
        when x"70" => output <= x"51"; when x"71" => output <= x"A3";
        when x"72" => output <= x"40"; when x"73" => output <= x"8F";
        when x"74" => output <= x"92"; when x"75" => output <= x"9D";
        when x"76" => output <= x"38"; when x"77" => output <= x"F5";
        when x"78" => output <= x"BC"; when x"79" => output <= x"B6";
        when x"7A" => output <= x"DA"; when x"7B" => output <= x"21";
        when x"7C" => output <= x"10"; when x"7D" => output <= x"FF";
        when x"7E" => output <= x"F3"; when x"7F" => output <= x"D2";
        when x"80" => output <= x"CD"; when x"81" => output <= x"0C";
        when x"82" => output <= x"13"; when x"83" => output <= x"EC";
        when x"84" => output <= x"5F"; when x"85" => output <= x"97";
        when x"86" => output <= x"44"; when x"87" => output <= x"17";
        when x"88" => output <= x"C4"; when x"89" => output <= x"A7";
        when x"8A" => output <= x"7E"; when x"8B" => output <= x"3D";
        when x"8C" => output <= x"64"; when x"8D" => output <= x"5D";
        when x"8E" => output <= x"19"; when x"8F" => output <= x"73";
        when x"90" => output <= x"60"; when x"91" => output <= x"81";
        when x"92" => output <= x"4F"; when x"93" => output <= x"DC";
        when x"94" => output <= x"22"; when x"95" => output <= x"2A";
        when x"96" => output <= x"90"; when x"97" => output <= x"88";
        when x"98" => output <= x"46"; when x"99" => output <= x"EE";
        when x"9A" => output <= x"B8"; when x"9B" => output <= x"14";
        when x"9C" => output <= x"DE"; when x"9D" => output <= x"5E";
        when x"9E" => output <= x"0B"; when x"9F" => output <= x"DB";
        when x"A0" => output <= x"E0"; when x"A1" => output <= x"32";
        when x"A2" => output <= x"3A"; when x"A3" => output <= x"0A";
        when x"A4" => output <= x"49"; when x"A5" => output <= x"06";
        when x"A6" => output <= x"24"; when x"A7" => output <= x"5C";
        when x"A8" => output <= x"C2"; when x"A9" => output <= x"D3";
        when x"AA" => output <= x"AC"; when x"AB" => output <= x"62";
        when x"AC" => output <= x"91"; when x"AD" => output <= x"95";
        when x"AE" => output <= x"E4"; when x"AF" => output <= x"79";
        when x"B0" => output <= x"E7"; when x"B1" => output <= x"C8";
        when x"B2" => output <= x"37"; when x"B3" => output <= x"6D";
        when x"B4" => output <= x"8D"; when x"B5" => output <= x"D5";
        when x"B6" => output <= x"4E"; when x"B7" => output <= x"A9";
        when x"B8" => output <= x"6C"; when x"B9" => output <= x"56";
        when x"BA" => output <= x"F4"; when x"BB" => output <= x"EA";
        when x"BC" => output <= x"65"; when x"BD" => output <= x"7A";
        when x"BE" => output <= x"AE"; when x"BF" => output <= x"08";
        when x"C0" => output <= x"BA"; when x"C1" => output <= x"78";
        when x"C2" => output <= x"25"; when x"C3" => output <= x"2E";
        when x"C4" => output <= x"1C"; when x"C5" => output <= x"A6";
        when x"C6" => output <= x"B4"; when x"C7" => output <= x"C6";
        when x"C8" => output <= x"E8"; when x"C9" => output <= x"DD";
        when x"CA" => output <= x"74"; when x"CB" => output <= x"1F";
        when x"CC" => output <= x"4B"; when x"CD" => output <= x"BD";
        when x"CE" => output <= x"8B"; when x"CF" => output <= x"8A";
        when x"D0" => output <= x"70"; when x"D1" => output <= x"3E";
        when x"D2" => output <= x"B5"; when x"D3" => output <= x"66";
        when x"D4" => output <= x"48"; when x"D5" => output <= x"03";
        when x"D6" => output <= x"F6"; when x"D7" => output <= x"0E";
        when x"D8" => output <= x"61"; when x"D9" => output <= x"35";
        when x"DA" => output <= x"57"; when x"DB" => output <= x"B9";
        when x"DC" => output <= x"86"; when x"DD" => output <= x"C1";
        when x"DE" => output <= x"1D"; when x"DF" => output <= x"9E";
        when x"E0" => output <= x"E1"; when x"E1" => output <= x"F8";
        when x"E2" => output <= x"98"; when x"E3" => output <= x"11";
        when x"E4" => output <= x"69"; when x"E5" => output <= x"D9";
        when x"E6" => output <= x"8E"; when x"E7" => output <= x"94";
        when x"E8" => output <= x"9B"; when x"E9" => output <= x"1E";
        when x"EA" => output <= x"87"; when x"EB" => output <= x"E9";
        when x"EC" => output <= x"CE"; when x"ED" => output <= x"55";
        when x"EE" => output <= x"28"; when x"EF" => output <= x"DF";
        when x"F0" => output <= x"8C"; when x"F1" => output <= x"A1";
        when x"F2" => output <= x"89"; when x"F3" => output <= x"0D";
        when x"F4" => output <= x"BF"; when x"F5" => output <= x"E6";
        when x"F6" => output <= x"42"; when x"F7" => output <= x"68";
        when x"F8" => output <= x"41"; when x"F9" => output <= x"99";
        when x"FA" => output <= x"2D"; when x"FB" => output <= x"0F";
        when x"FC" => output <= x"B0"; when x"FD" => output <= x"54";
        when x"FE" => output <= x"BB"; when x"FF" => output <= x"16";
        when others => output<=x"00";
    end case;
end process;

end Behavioral;
